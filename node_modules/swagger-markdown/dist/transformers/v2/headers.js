"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.transformHeaders = void 0;
const markdown_1 = require("../../lib/markdown");
/**
 * Make it a little bit simpler
 * Respect just type and description, like it is shown in the documentation
 *
 * @export
 * @param {OpenAPIV2.HeadersObject} headers
 * @return {*}  {MDstring}
 */
function transformHeaders(headers) {
    const md = markdown_1.Markdown.md();
    let string;
    const subString = md.string();
    let hasHeaders = false;
    Object.entries(headers).forEach(([name, obj]) => {
        if ('type' in obj || 'description' in obj) {
            hasHeaders = true;
            subString.concat(md.string(name).bold());
            if ('type' in obj) {
                subString.concat(md.string(` (${obj.type})`));
            }
            if ('description' in obj) {
                subString.concat(md.string(': '));
                subString.concat(md.string(obj.description));
            }
            subString.concat(md.string().br(true));
        }
    });
    if (hasHeaders) {
        string = md.string('Headers:').bold().br(true);
        string.concat(subString);
    }
    else {
        string = md.string();
    }
    return string;
}
exports.transformHeaders = transformHeaders;
