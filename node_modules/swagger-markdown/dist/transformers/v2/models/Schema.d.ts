import { OpenAPIV2 } from 'openapi-types';
export interface SchemaInterface {
    type?: OpenAPIV2.SchemaObject['type'];
    format?: string;
    ref?: string;
    allOf?: SchemaInterface[];
    items?: SchemaInterface;
    properties?: {
        [name: string]: SchemaInterface;
    };
    getType(): OpenAPIV2.SchemaObject['type'] | undefined;
    getFormat(): string | undefined;
    getItems(): SchemaInterface | undefined;
    getReference(): string | undefined;
    getAllOf(): SchemaInterface[] | undefined;
}
export declare class Schema implements SchemaInterface {
    type?: OpenAPIV2.SchemaObject['type'];
    format?: string;
    ref?: string;
    allOf?: SchemaInterface[];
    items?: SchemaInterface;
    properties?: {
        [name: string]: SchemaInterface;
    };
    /**
     * constructor
     *
     * @param {Object} [schema=null]
     */
    constructor(schema?: Partial<OpenAPIV2.SchemaObject>);
    /**
     * @param {{ [name: string]: OpenAPIV2.SchemaObject}} properties
     * @return {*}  {Schema}
     * @memberof Schema
     */
    setProperties(properties: {
        [name: string]: OpenAPIV2.SchemaObject;
    }): Schema;
    /**
     * @param {String} type
     */
    setType(type: OpenAPIV2.SchemaObject['type']): Schema;
    /**
     * @param {Array<Object>} allOf
     */
    setAllOf(allOf: any): this;
    /**
     * @param {String} format
     */
    setFormat(format: string): Schema;
    /**
     * @param {Object} items
     */
    setItems(items: OpenAPIV2.SchemaObject['items']): this;
    /**
     * @param {String} ref
     */
    setReference(ref: string): Schema;
    /**
     * @return {String}
     */
    getType(): OpenAPIV2.SchemaObject['type'] | undefined;
    /**
     * @return {String}
     */
    getFormat(): string | undefined;
    /**
     * @return {Object}
     */
    getItems(): SchemaInterface | undefined;
    /**
     * @return {String}
     */
    getReference(): string | undefined;
    /**
     * @return {Array<Schema>}
     */
    getAllOf(): SchemaInterface[];
    getProperties(): {
        [name: string]: SchemaInterface;
    };
}
