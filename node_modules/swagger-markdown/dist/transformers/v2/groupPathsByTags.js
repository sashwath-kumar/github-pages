"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.groupPathsByTags = void 0;
const types_1 = require("../../types");
/**
 * Group path and methods by tags they have
 */
function groupPathsByTags(inputDoc) {
    const tagged = {};
    Object.keys(inputDoc).forEach((path) => {
        const data = inputDoc[path];
        Object.keys(data).forEach((method) => {
            if (types_1.ALLOWED_METHODS.includes(method)) {
                const pathMethod = data[method];
                const tags = pathMethod.tags || [''];
                tags.forEach((tagName) => {
                    if (!tagged[tagName]) {
                        tagged[tagName] = Object.assign(Object.assign({}, tagged[tagName]), { [path]: {
                                parameters: data.parameters,
                                $ref: data.$ref,
                            } });
                    }
                    tagged[tagName] = Object.assign(Object.assign({}, tagged[tagName]), {
                        [path]: Object.assign(Object.assign({}, tagged[tagName][path]), { [method]: pathMethod }),
                    });
                });
            }
        });
    });
    return tagged;
}
exports.groupPathsByTags = groupPathsByTags;
